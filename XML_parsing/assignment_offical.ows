<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Extract_AllXml" position="(111.66666666666669, 180.0)" />
		<node id="1" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(348.66666666666663, 182.25)" />
		<node id="2" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Extract_OneXml" position="(110.91666666666666, 30.33333333333337)" />
		<node id="3" name="Distributions" qualified_name="Orange.widgets.visualize.owdistributions.OWDistributions" project_name="Orange3" version="" title="Distributions" position="(277.0, 276.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="Data" sink_channel="Data" enabled="true" />
		<link id="1" source_node_id="0" sink_node_id="3" source_channel="Data" sink_channel="Data" enabled="true" />
	</links>
	<annotations />
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xfa\x00\x00\x03\xc0\x00\x00\x01\xf8\x00\x00\x00\x06\x00\x00\x00\x17\x00\x00\x03\xb9\x00\x00\x01\xf1\x00\x00\x00\x00\x02\x00\x00\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x03\xbf\x00\x00\x01\xf7', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'from lxml import etree\nfrom Orange.data import *\nimport xml.etree.ElementTree as ET\nimport glob\n\n# import OS module\nimport os\n \n# This is my path\npath="E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata"\nHtml_list=glob.glob(\'E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata/*.xml\')\n# to store files in a list\n\n \n# dirs=directories\nfor Html_file in Html_list:\n    with open (Html_file, \'r\',encoding=\'utf-8\') as file:\n        tree=ET.parse(file)\n        root=tree.getroot()\n        elems = root.findall(\'./front/article-meta\')\n        data= [[\n                elem.find("./pub-date/year").text,\n                elem.find("./pub-date/month").text,\n                elem.find("./title-group/article-title").text\n                 \n                ] for elem in elems]\n        \n        for i in data:\n            i.append(\'ML\')\n            \n            \n        year = ContinuousVariable(\'year\')\n        month = ContinuousVariable(\'month\')\n        title = StringVariable(\'title\')\n        ML = StringVariable(\'topic\')\n        domain = Domain([year,month],metas  = [title, ML])\n        table = Table.from_list(domain, data)\n        out_data= table\n        print(out_data)\n        \n       \n            \n         \n         \n         \n        ', 'filename': None}], 'scriptText': 'from lxml import etree\nfrom Orange.data import *\nimport xml.etree.ElementTree as ET\nimport glob\n\n# import OS module\nimport os\n \n# This is my path\npath="E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata"\nfiles=glob.glob(\'E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata/*.xml\')\n# to store files in a list\n\n#Allfiles\nMy_data=[]\nfor xml in files:\n    # read from xml\n    parser = etree.XMLParser(recover=True)\n    tree = etree.parse(xml, parser=parser)\n    root = tree.getroot()\n    My_data.append([\n        root.findtext("./front/article-meta/pub-date/year"),\n        root.findtext("./front/article-meta/pub-date/month"),\n        root.findtext("./front/article-meta/title-group/article-title"),\n        \'ML\'\n    ])\n#print(My_data)\n    \nyear = ContinuousVariable(\'Year\')\nmonth = ContinuousVariable(\'Month\')\ntitle = StringVariable(\'Title\')\ntopic = StringVariable(\'Topic\')\ndomain = Domain([year,month],metas  = [title,topic])\ntable = Table.from_list(domain,My_data)\nout_data = table\nprint(out_data)\n            \n         \n         \n         \n        ', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xdc\x00\x00\x00\xe9\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="1" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': False, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x03\xbf\x00\x00\x02\x02\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x03\xbf\x00\x00\x02\x02\x00\x00\x00\x00\x00\x00\x00\x00\x03\xc0\x00\x00\x00\x02\x00\x00\x00#\x00\x00\x03\xbf\x00\x00\x02\x02', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="2" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x03\xbf\x00\x00\x01\xf7\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x03\xbf\x00\x00\x01\xf7\x00\x00\x00\x00\x02\x00\x00\x00\x03\xc0\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x03\xbf\x00\x00\x01\xf7', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'from lxml import etree\nfrom Orange.data import *\n# read from xml\ntree = etree.parse(\'E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata/journal-article-10.1086_250061.xml\')\nroot = tree.getroot()\ndata= [(       \n            root.find("./front/article-meta/pub-date/year").text,\n            root.find("./front/article-meta/pub-date/month").text,\n            root.find("./front/article-meta/title-group/article-title").text,\n            "ML"\n                 \n        )]\n  \nprint(data)', 'filename': None}], 'scriptText': 'from lxml import etree\nfrom Orange.data import *\n# read from xml\ntree = etree.parse(\'E:/Apprentisage/EPITA/S2/Data Exploration_Preparation/13_04/ml/metadata/journal-article-10.1086_250061.xml\')\nroot = tree.getroot()\ndata= [(       \n            root.find("./front/article-meta/pub-date/year").text,\n            root.find("./front/article-meta/pub-date/month").text,\n            root.find("./front/article-meta/title-group/article-title").text,\n            "ML"\n                 \n        )]\n  \nprint(data)', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00|\x00\x00\x00J\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="3" format="pickle">gASV8QEAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMEGN1bXVs
YXRpdmVfZGlzdHKUiYwTZml0dGVkX2Rpc3RyaWJ1dGlvbpRLAIwJaGlkZV9iYXJzlImMDWtkZV9z
bW9vdGhpbmeUSwqME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAJ8AAAAxAAADIAAA
AbAAAACgAAAASAAAAx8AAAGvAAAAAAAAAAADwAAAAKAAAABIAAADHwAAAa+UjApzaG93X3Byb2Jz
lImMDHNvcnRfYnlfZnJlcZSJjA9zdGFja2VkX2NvbHVtbnOUiYwLX192ZXJzaW9uX1+USwGMEGNv
bnRleHRfc2V0dGluZ3OUXZSMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9
lCiMBnZhbHVlc5R9lCiMBGN2YXKUTkr+////hpSMDm51bWJlcl9vZl9iaW5zlEsFSv7///+GlIwJ
c2VsZWN0aW9ulI+USv7///+GlIwDdmFylIwEWWVhcpRLZoaUaAxLAXWMCmF0dHJpYnV0ZXOUfZQo
aB5LAowFTW9udGiUSwJ1jAVtZXRhc5R9lCiMBVRpdGxllEsDjAVUb3BpY5RLA3V1YmF1Lg==
</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
